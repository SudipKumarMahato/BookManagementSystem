package library.management.system;

import java.awt.Point;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 1234s
 */
public class AddBook extends javax.swing.JFrame {

    int tableSelectedRow = -1;
    ButtonGroup grp = new ButtonGroup();
    //grp.add(txtbtnmale);
    // grp.add(txtbtnfemale);

    /**
     * Creates new form AddBook
     */
    public AddBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        gendertxt = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtbookID = new javax.swing.JTextField();
        txtauthor = new javax.swing.JTextField();
        txtbookname = new javax.swing.JTextField();
        txtquantity = new javax.swing.JTextField();
        txtprice = new javax.swing.JTextField();
        txtadd = new javax.swing.JButton();
        addclearbtn = new javax.swing.JButton();
        addcancelbtn = new javax.swing.JButton();
        Bookkeepertxt = new javax.swing.JLabel();
        backtbnaddbook = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        lastnametxt = new javax.swing.JLabel();
        firstnametxt = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtfirstname = new javax.swing.JTextField();
        txtlastname = new javax.swing.JTextField();
        txtcombobox = new javax.swing.JComboBox<>();
        importdata = new javax.swing.JButton();
        radioButtonMale = new javax.swing.JRadioButton();
        radioButtonFemale = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabledata = new javax.swing.JTable();
        searchcategory = new javax.swing.JComboBox<>();
        txtsearchbycategory = new javax.swing.JButton();
        searchbyprice = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        clearbtnforsearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtsearchbyprice = new javax.swing.JTextField();
        sortbyprice = new javax.swing.JButton();
        sortbyqauntity = new javax.swing.JButton();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setForeground(new java.awt.Color(0, 153, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Books");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(520, 520, 520)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        gendertxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        gendertxt.setForeground(new java.awt.Color(255, 255, 255));
        gendertxt.setText("Gender");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Book Name");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Author");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Price");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Quantity");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Category");

        txtbookID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbookIDActionPerformed(evt);
            }
        });

        txtauthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtauthorActionPerformed(evt);
            }
        });

        txtbookname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbooknameActionPerformed(evt);
            }
        });

        txtquantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtquantityActionPerformed(evt);
            }
        });

        txtprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpriceActionPerformed(evt);
            }
        });

        txtadd.setBackground(new java.awt.Color(255, 255, 255));
        txtadd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtadd.setText("Add");
        txtadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddActionPerformed(evt);
            }
        });

        addclearbtn.setBackground(new java.awt.Color(255, 255, 255));
        addclearbtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addclearbtn.setText("Clear");
        addclearbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addclearbtnActionPerformed(evt);
            }
        });

        addcancelbtn.setBackground(new java.awt.Color(255, 255, 255));
        addcancelbtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addcancelbtn.setText("Cancel");
        addcancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcancelbtnActionPerformed(evt);
            }
        });

        Bookkeepertxt.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        Bookkeepertxt.setForeground(new java.awt.Color(255, 255, 255));
        Bookkeepertxt.setText("Bookkeeper Details ");

        backtbnaddbook.setBackground(new java.awt.Color(255, 255, 255));
        backtbnaddbook.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        backtbnaddbook.setText("Back");
        backtbnaddbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtbnaddbookActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Book information ");

        lastnametxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lastnametxt.setForeground(new java.awt.Color(255, 255, 255));
        lastnametxt.setText("Last Name");

        firstnametxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        firstnametxt.setForeground(new java.awt.Color(255, 255, 255));
        firstnametxt.setText("First Name");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Book ID");

        txtfirstname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfirstnameActionPerformed(evt);
            }
        });

        txtlastname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlastnameActionPerformed(evt);
            }
        });

        txtcombobox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Romance", "Poetry", "Software ", "Database", "Novel" }));
        txtcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcomboboxActionPerformed(evt);
            }
        });

        importdata.setBackground(new java.awt.Color(255, 0, 0));
        importdata.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        importdata.setForeground(new java.awt.Color(255, 255, 255));
        importdata.setText("Import Data ");
        importdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importdataActionPerformed(evt);
            }
        });

        radioButtonMale.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup6.add(radioButtonMale);
        radioButtonMale.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radioButtonMale.setForeground(new java.awt.Color(255, 255, 255));
        radioButtonMale.setText("Male");
        radioButtonMale.setToolTipText("");
        radioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonMaleActionPerformed(evt);
            }
        });

        radioButtonFemale.setBackground(new java.awt.Color(51, 51, 51));
        buttonGroup6.add(radioButtonFemale);
        radioButtonFemale.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radioButtonFemale.setForeground(new java.awt.Color(255, 255, 255));
        radioButtonFemale.setText("Female");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtbookID, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addclearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtauthor, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtbookname, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(addcancelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(backtbnaddbook, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Bookkeepertxt)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(firstnametxt)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(gendertxt)
                                        .addComponent(lastnametxt)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtlastname, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(radioButtonMale, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(radioButtonFemale))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(importdata, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Bookkeepertxt))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbookID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(firstnametxt)
                    .addComponent(txtfirstname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtbookname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(lastnametxt)
                    .addComponent(txtlastname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gendertxt)
                        .addComponent(radioButtonMale)
                        .addComponent(radioButtonFemale))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtauthor, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtprice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(importdata, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(txtcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addclearbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addcancelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backtbnaddbook, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76))
        );

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204), 2));

        tabledata.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N
        tabledata.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tabledata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Name", "Author", "Price", "Quantity", "Category", "First Name", "Last Name", "Gender"
            }
        ));
        tabledata.setRowHeight(24);
        jScrollPane1.setViewportView(tabledata);

        searchcategory.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchcategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Romance", "Poetry", "Software", "Database", "Novel" }));

        txtsearchbycategory.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtsearchbycategory.setText("Search by Category");
        txtsearchbycategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchbycategoryActionPerformed(evt);
            }
        });

        searchbyprice.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchbyprice.setText("Search by Price");
        searchbyprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbypriceActionPerformed(evt);
            }
        });

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        clearbtnforsearch.setBackground(new java.awt.Color(255, 255, 255));
        clearbtnforsearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        clearbtnforsearch.setText("Clear");
        clearbtnforsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearbtnforsearchActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search by String");

        txtsearchbyprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchbypriceActionPerformed(evt);
            }
        });
        txtsearchbyprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchbypriceKeyReleased(evt);
            }
        });

        sortbyprice.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        sortbyprice.setText("Sort by Price");
        sortbyprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortbypriceActionPerformed(evt);
            }
        });

        sortbyqauntity.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        sortbyqauntity.setText("Sort by Quantity");
        sortbyqauntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortbyqauntityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchcategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtsearchbycategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sortbyqauntity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchbyprice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtsearchbyprice)
                    .addComponent(sortbyprice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(72, 72, 72)
                .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clearbtnforsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(167, 167, 167))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearbtnforsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtsearchbyprice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsearchbycategory, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbyprice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortbyprice, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortbyqauntity, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtbookIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbookIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbookIDActionPerformed

    private void txtauthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtauthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtauthorActionPerformed

    private void txtbooknameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbooknameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbooknameActionPerformed

    private void txtquantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtquantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtquantityActionPerformed

    private void txtpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpriceActionPerformed

    private void addcancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcancelbtnActionPerformed
        this.setVisible(false); // current frame 
        this.hide(); // opening previous frame when clicked Cancel button
        Home h = new Home();
        h.setVisible(true);
    }//GEN-LAST:event_addcancelbtnActionPerformed

    private void backtbnaddbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtbnaddbookActionPerformed
        this.hide();
        Home h = new Home();
        h.setVisible(true);
    }//GEN-LAST:event_backtbnaddbookActionPerformed

    private void txtaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddActionPerformed

        int rowCount = tabledata.getRowCount();

        String bookID = txtbookID.getText();
        String bookname = txtbookname.getText();
        String author = txtauthor.getText();
        String price = txtprice.getText();
        String quantity = txtquantity.getText();
        String category = txtcombobox.getSelectedItem().toString();
        String firstname = txtfirstname.getText();
        String lastname = txtlastname.getText();

        radioButtonMale.setActionCommand("Male");
       // String radioButtonValue = buttonGroup6.getSelection().getActionCommand();

        radioButtonFemale.setActionCommand("Female");
        String radioButtonValue1 = buttonGroup6.getSelection().getActionCommand();
        DefaultTableModel model = (DefaultTableModel) tabledata.getModel();
        
        // Coverting string to int for search by price
        Double price1 =Double.parseDouble(price);
        
        
        Object[]row = new Object[] {bookID,bookname, author, price, quantity, category, firstname, lastname, radioButtonValue1};
        Data d = new Data(bookID, bookname, author, price1, quantity, category, firstname, lastname, radioButtonValue1);
        model.addRow(row);
        entryData.add(d);
        
        JOptionPane.showMessageDialog(rootPane, " Successfully addded");
        
        
        
        
       // data validation starts here
       
        String[] values = {bookID, bookname, author, price, quantity, category, firstname, lastname, radioButtonValue1};
        System.out.println(bookID);
        System.out.println(bookname);
        //empty data validation
        for (String s : values) {
            if (s.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please dont leave any fields empty");
                return;
            }
        }

        //duplicate data validation
        for (int i = 0; i < rowCount; i++) {
            String thisBookID = (String) tabledata.getValueAt(i, 0);
            String thisBookName = (String) tabledata.getValueAt(i, 1);
            String thisfirstname = (String) tabledata.getValueAt(i, 6);
            String thislastname = (String) tabledata.getValueAt(i, 7);

            if (thisBookID.equals(bookID)) {
                JOptionPane.showMessageDialog(rootPane, "Duplicate Book ID");
                return;
            }
            if (thisBookName.equals(bookname)) {
                JOptionPane.showMessageDialog(rootPane, "Duplicate Book Name");
                return;
            }

            if (thisfirstname.equals(firstname)) {
                JOptionPane.showMessageDialog(rootPane, "Duplicate First Name");
                return;
            }

            if (thislastname.equals(lastname)) {
                JOptionPane.showMessageDialog(rootPane, "Duplicate Last Name");
                return;
            }
        }

        //add to table
        addEmptyRow();
        for (int i = 0; i < tabledata.getColumnCount(); i++) {
            tabledata.setValueAt(values[i], rowCount, i);
        }


    }//GEN-LAST:event_txtaddActionPerformed

    private void mainTableMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            Point point = evt.getPoint();
            tableSelectedRow = tabledata.rowAtPoint(point);
            doubleClickWindow.setVisible(true);
        }
    }

    private void doubleUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        doubleClickWindow.setVisible(false);
        String bookID = (String) tabledata.getValueAt(tableSelectedRow, 0);
        String bookname = (String) tabledata.getValueAt(tableSelectedRow, 1);
        String author = (String) tabledata.getValueAt(tableSelectedRow, 2);
        String price = (String) tabledata.getValueAt(tableSelectedRow, 3);
        String quantity = (String) tabledata.getValueAt(tableSelectedRow, 4);
        String firstname = (String) tabledata.getValueAt(tableSelectedRow, 6);
        String lastname = (String) tabledata.getValueAt(tableSelectedRow, 7);

        String[] values = {bookID, bookname, author, quantity, firstname, lastname};
        txtbookID.setText(values[0]);
        txtbookname.setText(values[1]);
        txtauthor.setText(values[2]);
        txtprice.setText(values[3]);
        txtquantity.setText(values[4]);
        txtfirstname.setText(values[6]);
        txtlastname.setText(values[7]);

        updateWindow.setVisible(true);
    }

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) tabledata.getModel();
        tableModel.removeRow(tableSelectedRow);
        doubleClickWindow.setVisible(false);
    }

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String bookID = txtbookID.getText();
        
        String bookname = txtbookname.getText();
        String author = txtauthor.getText();
        String price = txtprice.getText();
        double price1 = Integer.parseInt(price);
        String quantity = txtquantity.getText();
        String category = txtcombobox.getSelectedItem().toString();
        String firstname = txtfirstname.getText();
        String lastname = txtlastname.getText();

        radioButtonMale.setActionCommand("Male");
        String radioButtonValue = buttonGroup6.getSelection().getActionCommand();

        radioButtonFemale.setActionCommand("Female");
        String radioButtonValue1 = buttonGroup6.getSelection().getActionCommand();

        String[] values = {bookID, bookname, author, price, quantity, category, firstname, lastname,radioButtonValue1};
        //empty data validation
        for (String s : values) {
            if (s.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Please dont leave any fields empty");
                return;
            }
        }

        //duplicate data validation
        for (int i = 0; i < tabledata.getRowCount(); i++) {
            if (i != tableSelectedRow) {
                String thisBookID = (String) tabledata.getValueAt(i, 0);
                String thisBookName = (String) tabledata.getValueAt(i, 1);
                String thisfirstname = (String) tabledata.getValueAt(i, 6);
                String thislastname = (String) tabledata.getValueAt(i, 7);

                if (thisBookID.equals(bookID)) {
                    JOptionPane.showMessageDialog(rootPane, "Duplicate Book ID");
                    return;
                }
                if (thisBookName.equals(bookname)) {
                    JOptionPane.showMessageDialog(rootPane, "Duplicate Book Name");
                    return;
                }

                if (thisfirstname.equals(firstname)) {
                    JOptionPane.showMessageDialog(rootPane, "Duplicate First Name");
                    return;
                }

                if (thislastname.equals(lastname)) {
                    JOptionPane.showMessageDialog(rootPane, "Duplicate Last Name");
                    return;
                }
            }
        }

        for (int i = 0; i < tabledata.getColumnCount(); i++) {
            tabledata.setValueAt(values[i], tableSelectedRow, i);
        }
        JOptionPane.showMessageDialog(updateWindow, "Successfully Updated!!!");
        tableSelectedRow = -1;
        updateWindow.setVisible(false);
    }
    private void addclearbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addclearbtnActionPerformed

        //TextFieldName.setText("");
        txtbookID.setText("");
        txtbookname.setText("");
        txtauthor.setText("");
        txtprice.setText("");
        txtquantity.setText("");
        txtcombobox.setSelectedIndex(0);
        radioButtonMale.setSelected(false);
        radioButtonFemale.setSelected(false);
        txtfirstname.setText("");
        txtlastname.setText("");
    }//GEN-LAST:event_addclearbtnActionPerformed

    private void txtfirstnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfirstnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfirstnameActionPerformed

    private void txtlastnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlastnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlastnameActionPerformed

    private void txtcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcomboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcomboboxActionPerformed

    private void txtsearchbycategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchbycategoryActionPerformed
        int count = 0;
        String searchValue = (String) searchcategory.getSelectedItem();
        String listOf_items = "";
        for (int j = 0; j < tabledata.getRowCount(); j++) {
            String value = (String) tabledata.getValueAt(j, 5);
            System.out.print(value);
            if (searchValue.equals(value)) {
                String a = String.valueOf(tabledata.getValueAt(j, 0));
                String b = String.valueOf(tabledata.getValueAt(j, 1));
                String c = String.valueOf(tabledata.getValueAt(j, 2));
                String d = String.valueOf(tabledata.getValueAt(j, 3));
                String e = String.valueOf(tabledata.getValueAt(j, 4));
                String f = String.valueOf(tabledata.getValueAt(j, 5));
                String g = String.valueOf(tabledata.getValueAt(j, 6));
                String h = String.valueOf(tabledata.getValueAt(j, 7));
                String i = String.valueOf(tabledata.getValueAt(j, 8));
                count++;

                listOf_items += String.valueOf(count) + " Book ID: " + a + 
                        ", Book name: " + b + 
                        ", Author: " + c + 
                        ", Price: " + d + 
                        ", Quantity: " + e + 
                        ", Category: " + f+ 
                        ",First Name: " + g +
                        ", Last Name: " + h +
                       ", Gender: " + i + "\n";
            }
        }
        String display = "There are " + count + " books under " + searchValue + " Category" + ":\n" + listOf_items;
        JOptionPane.showMessageDialog(null, display, "Number of Books", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_txtsearchbycategoryActionPerformed

    private void searchbypriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbypriceActionPerformed
     
        String byPrice = txtsearchbyprice.getText();
        sort("price");
        if(byPrice.equals(""))
        {
            JOptionPane.showMessageDialog(null, " Enter price to search", "Entry Missing", JOptionPane.ERROR_MESSAGE);
        }
        else{
            double searchPrice = Double.parseDouble(byPrice);
            Data items = bs.binarySearch(entryData, 0, entryData.size() -1, searchPrice);
            if(!(items == null))
            {
                String item1 = items.bookID ;
                String item2 = items.bookname ;
                String item3 = items.author ;
                String item4 = items.quantity ;
                String item5 = items.category ;
                String item6 = items.firstname ;
                String item7 = items.lastname ;
                
                
                String display = "BookID: "+item1 +"\n"+ "Book Name: "+item2 +"\n"+ "Author: "+item3+ "\n"+ " Quantity: "+item4+ "\n"+ "Category: "+item5 +" \n"+ " First Name: "+item4+ "\n"+ "Last Name: ";
                JOptionPane.showMessageDialog(null, display, "Price Matched.", JOptionPane.INFORMATION_MESSAGE); 
                           
            }
            else
            {
                JOptionPane.showMessageDialog(null, "No items matching the price were found.", "Price not found", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_searchbypriceActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void importdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importdataActionPerformed
        String filepath = "Data.txt";
        File file = new File(filepath);
       
        BufferedReader br;
        try {
            br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the firt line
            // set columns name to the jTable Model 
            DefaultTableModel model = (DefaultTableModel) tabledata.getModel();
            Object[] tableLines = br.lines().toArray();

            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split(",");
                model.addRow(dataRow);

            }

            // get lines from the txt file
            // extract data from the lines 
            //set data to jTable model
        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_importdataActionPerformed

    private void clearbtnforsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearbtnforsearchActionPerformed
        txtsearch.setText("");
    }//GEN-LAST:event_clearbtnforsearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        String searchString = txtsearch.getText();
        search(searchString);
    }//GEN-LAST:event_txtsearchKeyReleased

    private void txtsearchbypriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchbypriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchbypriceActionPerformed

    private void txtsearchbypriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchbypriceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchbypriceKeyReleased

    private void radioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioButtonMaleActionPerformed

    private void sortbypriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortbypriceActionPerformed
        sort("price");
    }//GEN-LAST:event_sortbypriceActionPerformed

    private void sortbyqauntityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortbyqauntityActionPerformed
       sort("quantity");
    }//GEN-LAST:event_sortbyqauntityActionPerformed

    public void search(String str) {
        // for string search
        DefaultTableModel model = (DefaultTableModel) tabledata.getModel();
        TableRowSorter<DefaultTableModel> sort = new TableRowSorter<>(model);
        tabledata.setRowSorter(sort);
        sort.setRowFilter(RowFilter.regexFilter(str));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBook().setVisible(true);
            }
        });
    }
    private javax.swing.JDialog updateWindow;
    private javax.swing.JDialog doubleClickWindow;
    private javax.swing.JButton doubleUpdateButton;
    private javax.swing.JButton deleteButton;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bookkeepertxt;
    private javax.swing.JButton addcancelbtn;
    private javax.swing.JButton addclearbtn;
    private javax.swing.JButton backtbnaddbook;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JButton clearbtnforsearch;
    private javax.swing.JLabel firstnametxt;
    private javax.swing.JLabel gendertxt;
    private javax.swing.JButton importdata;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastnametxt;
    private javax.swing.JRadioButton radioButtonFemale;
    private javax.swing.JRadioButton radioButtonMale;
    private javax.swing.JButton searchbyprice;
    private javax.swing.JComboBox<String> searchcategory;
    private javax.swing.JButton sortbyprice;
    private javax.swing.JButton sortbyqauntity;
    private static javax.swing.JTable tabledata;
    private javax.swing.JButton txtadd;
    private javax.swing.JTextField txtauthor;
    private javax.swing.JTextField txtbookID;
    private javax.swing.JTextField txtbookname;
    private javax.swing.JComboBox<String> txtcombobox;
    private javax.swing.JTextField txtfirstname;
    private javax.swing.JTextField txtlastname;
    private javax.swing.JTextField txtprice;
    private javax.swing.JTextField txtquantity;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JButton txtsearchbycategory;
    private javax.swing.JTextField txtsearchbyprice;
    // End of variables declaration//GEN-END:variables

    ArrayList<Data> entryData = new ArrayList<>();
    private final binarysearch bs = new binarysearch();

    private void addEmptyRow() {
        DefaultTableModel tableModel = (DefaultTableModel) tabledata.getModel();
        tableModel.addRow(new Object[]{null});
    }
    //Selection Sort
    // for sorting the data
     public void sort(String sortBy)
    {
        Data tempData;
        for(int i = 0; i<entryData.size(); i++)
        {
            for(int j = 1; j<entryData.size(); j++)
            {
                Data first = entryData.get(j);
                Data second = entryData.get(j-1);
                System.out.println(first.price);
                if(sortBy.equals("price"))
                {
                    if(first.price < second.price)
                    {
                        tempData = entryData.get(j);
                        entryData.set(j, entryData.get(j-1));
                        entryData.set(j-1, tempData);
                    }
                }
                else if(first.quantity.compareToIgnoreCase(second.quantity)<0)
                {
                    tempData = entryData.get(j);
                    entryData.set(j, entryData.get(j-1));
                    entryData.set(j-1, tempData);
                }
                    
            }
        }
        
    }
}
